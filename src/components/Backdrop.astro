---

---

<div id="backdrop" onload="draw()">
  <canvas id="canvas"></canvas>
  <script>
    // TODO: can we make this oblique?

    const delay = (delayInMs: number) => {
      return new Promise((resolve) => setTimeout(resolve, delayInMs));
    };

    const delayVal = 20;
    if (typeof document !== "undefined") {
      var canvas = document.getElementById("canvas");
      if (canvas) {
        var ctx = canvas.getContext("2d");
        const width = canvas.clientWidth;
        const height = canvas.clientHeight;
        canvas.width = width;
        canvas.height = height;
        console.log(width, height);
        console.log(canvas.clientWidth, canvas.clientHeight);

        const draw = async () => {
          var count = 0;
          while (count < 10000) {
            const x = Math.random() * width;
            const y = Math.random() * height;

            ctx.beginPath();
            ctx.strokeStyle = `rgba(${Math.floor(Math.random() * 255)},${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)},0.2)`;
            ctx.lineWidth = Math.floor(Math.random() * 5) + 1;
            ctx.moveTo(x, 0);
            ctx.lineTo(0, y);
            // ctx.lineTo(x, height);
            ctx.stroke();
            const vline = await delay(delayVal);

            ctx.beginPath();
            ctx.strokeStyle = `rgba(${Math.floor(Math.random() * 255)},${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)},0.2)`;
            ctx.lineWidth = Math.floor(Math.random() * 5) + 1;
            ctx.moveTo(0, y);
            ctx.lineTo(width, y);
            // ctx.lineTo(x, height);
            ctx.stroke();
            const vline2 = await delay(delayVal);

            ctx.beginPath();
            ctx.strokeStyle = `rgba(${Math.floor(Math.random() * 255)},${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, 0.2)`;
            ctx.lineWidth = Math.floor(Math.random() * 5) + 1;
            ctx.moveTo(x, height);
            ctx.lineTo(width, y);
            // ctx.moveTo(0, y);
            // ctx.lineTo(width, 0);
            // ctx.lineTo(width, y);
            ctx.stroke();
            const hline = await delay(delayVal);

            ctx.beginPath();
            ctx.strokeStyle = `rgba(${Math.floor(Math.random() * 255)},${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, 0.2)`;
            ctx.lineWidth = Math.floor(Math.random() * 5) + 1;
            ctx.moveTo(x, height);
            ctx.lineTo(x, 0);
            // ctx.moveTo(0, y);
            // ctx.lineTo(width, 0);
            // ctx.lineTo(width, y);
            ctx.stroke();
            const hline2 = await delay(delayVal);

            count++;
          }
        };

        draw();
      }
    }
  </script>
</div>
<style>
  #backdrop {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    /* background-color: white; */
    z-index: 1;
    /* opacity: 0.75; */
  }

  #canvas {
    width: 100%;
    height: 100%;
  }
</style>
